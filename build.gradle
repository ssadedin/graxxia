apply plugin: 'groovy'
apply plugin: 'java'

sourceSets.main.java.srcDirs = []
sourceSets.main.groovy.srcDirs += ["src/main/java"]

project.ext {
  VERSION="0.0.1"
  STAGE="build/stage/graxxia-$VERSION"
  SMILE_VERSION='2.6.0'
}

repositories {
    mavenCentral()
    maven {
      name "ImageJ" 
      url "http://maven.imagej.net/content/repositories/public/"
    }
	
}

configurations {
  compile
}

println "*"*80
println "Building for Groovy $GROOVY_VERSION"
println "*"*80

dependencies {
     compile "org.codehaus.groovy:groovy-all:$GROOVY_VERSION"
     compile group: 'org.codehaus.groovy', name: 'groovy', version: "$GROOVY_VERSION"
     compile group: 'org.codehaus.groovy', name: 'groovy-cli-commons', version: "$GROOVY_VERSION"
     compile group: 'org.apache.ivy', name:'ivy', version:'2.2.0' 
     compile 'com.lowagie:itext:2.1.7'
     compile 'org.apache.commons:commons-math3:3.5'

     compile group: 'com.github.haifengl', name: 'smile-core', version: SMILE_VERSION
     compile group: 'com.github.haifengl', name: 'smile-math', version: SMILE_VERSION
     compile group: 'com.github.haifengl', name: 'smile-netlib', version: '2.4.0'
     compile group: 'com.github.haifengl', name: 'smile-data', version: SMILE_VERSION
     compile group: 'com.github.haifengl', name: 'smile-plot', version: SMILE_VERSION

     // compile group: 'org.jfree', name: 'jfreechart', version: '1.5.0'
     
     compile group: 'org.ejml', name: 'ejml-core', version: '0.38'
     compile group: 'org.ejml', name: 'ejml-ddense', version: '0.38'
     
     
     compile group: 'com.github.fommil.netlib', name: 'all', version: '1.1.2'
     compile group: 'com.github.fommil.netlib', name: 'all', version: '1.1.2', ext: 'pom'
     
     implementation group: 'com.github.jupyter', name: 'jvm-repr', version: '0.4.0'
	 
//      compile group: 'com.github.fommil', name: 'jniloader', version: '1.1'     

     compile 'junit:junit:4.4'
     compile 'commons-cli:commons-cli:1.4'
     compile 'com.xlson.groovycsv:groovycsv:1.3'
     compile group:'org.slf4j', name:'slf4j-jdk14', version: '1.7.5'            
     // compile 'log4j:log4j:1.2.17'
     compile files(fileTree(dir:'lib', includes:['*.jar']))
}

// Bundle all dependencies into output library
jar {
    from configurations.compile.grep { 
        !it.name.endsWith('.pom') &&
        !it.name.startsWith("cramtools") && 
        !it.name.contains('log4j') &&
        !it.name.startsWith('groovy-') &&
        !it.name.contains('-linux-armhf-') &&
        !it.name.contains('win-i686') &&
        !it.name.contains('linux-i686') &&
        !it.name.startsWith('junit-') &&
        !it.name.startsWith('opentest4j-') &&
        !it.name.startsWith('testng-') &&
        !it.name.startsWith('bcmail-') &&
        !it.name.startsWith('ivy-') &&
        !it.name.contains('hamcrest')
        }.collect { 
            println(it.name); 
            
            (it.isDirectory() && !it.name.endsWith('pom')) ? it : zipTree(it) 
        }

    exclude "groovy/**"
    exclude "org/codehaus/**"
    exclude "META-INF/groovy*"
    exclude "META-INF/**/*groovy*"
    exclude "META-INF/BCKEY*"
    exclude "org/bouncycastle/**"
}

groovydoc {
    destinationDir = new File('doc')
    source = 'src/main/groovy'
    overviewText = resources.text.fromFile('src/main/groovy/overview.html')
    docTitle = 'Graxxia Documentation'
    doLast {
        println "Doing it now"
        ant.copy file:"src/main/resources/docstyle.css", tofile:'doc/stylesheet.css', overwrite:true
    }

}

if (rootProject == project) {
    wrapper {
        gradleVersion = '5.2.1'
    }
}

